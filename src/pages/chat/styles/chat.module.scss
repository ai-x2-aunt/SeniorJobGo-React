@use '@assets/styles/_variables' as *;
@import url('https://fonts.googleapis.com/css2?family=Poppins:ital,wght@0,400;0,500;0,600;0,700;&display=swap');

* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
  font-family: 'Pretendard', sans-serif;
}

body {
  background-color: $background-color;
  color: $light-text-color;
}

.container {
  overflow-y: auto;
  padding: 32px 0 60px;
  max-height: calc(100vh - 127px);
  scrollbar-color: var(--scrollbar-color) transparent;

  // 공통 레이아웃 (appHeader, suggestions, message, promptWrapper, disclaimerText)
  :where(.appHeader, .suggestions, .message, .promptWrapper, .disclaimerText) {
    margin: 0 auto;
    width: 100%;
    padding: 0 20px;
    max-width: 980px;
  }

  .appHeader {
    margin-top: 4vh;

    .heading {
      font-size: 3rem;
      width: fit-content;
      background: linear-gradient(to right, #ffbc2c, #8f6fff);
      background-clip: text;
      -webkit-background-clip: text;
      -webkit-text-fill-color: transparent;
    }

    .subHeading {
      font-size: 2.6rem;
      margin-top: 3px;
      color: $text-subheading-color;
    }
  }

  .suggestions {
    display: flex;
    gap: 15px;
    margin-top: 9.5vh;
    list-style: none;
    overflow-x: auto;
    scrollbar-width: none;

    .suggestionsItem {
      width: 228px;
      // width: 32%;
      padding: 18px;
      flex-shrink: 0;
      display: flex;
      cursor: pointer;
      flex-direction: column;
      align-items: flex-start;
      justify-content: space-between;
      border-radius: 12px;
      background: $light-secondary-color;

      &:hover {
        // background: $light-secondary-hover-color;
        background: linear-gradient(to right, #eccd81, #e5d39d);
      }

      .text {
        font-size: $font-size-20;
        line-height: 1.5rem;
      }

      span {
        height: 45px;
        width: 45px;
        margin-top: 35px;
        display: flex;
        align-self: flex-end;
        align-items: center;
        justify-content: center;
        border-radius: 50%;
        color: #1d7efd;
        background: $light-primary-color;
      }

      &:nth-child(2) {
        span {
          color: #ffc107;
        }
      }

      &:nth-child(3) {
        span {
          color: #6f42c1;
        }
      }
    }
  }

  .chatsContainer {
    display: flex;
    gap: 20px;
    flex-direction: column;
    overflow-y: auto;
    scroll-behavior: smooth;
    // overscroll-behavior-y: contain; // 모바일에서 스크롤 바운스 방지

    .message {
      display: flex;
      gap: 11px;
      align-items: center;

      .messageText {
        padding: 3px 10px; // 3px 16px
        line-height: 1.5rem;
        word-wrap: break-word;
        white-space: pre-line;
      }
    }

    .botMessage {
      margin: 9px auto;

      .avatar {
        height: 43px;
        width: 43px;
        flex-shrink: 0;
        padding: 6px;
        align-self: flex-start;
        margin-right: -7px;
        border-radius: 50%;
        background: $background-color;
        border: 1px solid $background-color;
      }

      &.loading {
        .avatar {
          animation: rotate 3s linear infinite;
        }
      }
    }

    .userMessage {
      flex-direction: column;
      align-items: flex-end;

      .messageText {
        padding: 12px 16px;
        max-width: 75%;
        border-radius: 13px 13px 3px 13px;
        background: linear-gradient(to right, #f2c765, #eccd81, #e5d39d);
        color: $light-text-color;
      }
    }
  }

  .disclaimerText {
    text-align: center;
    font-size: 0.9rem;
    padding: 16px 20px;
    color: $placeholder-color;
  }
}

.promptContainer {
  position: fixed;
  bottom: 0;
  left: 0;
  width: 100%;
  padding: 16px 9px;
  background: $background-color;

  :where(.promptWrapper, .promptForm, .promptActions) {
    display: flex;
    gap: 12px;
    height: 56px;
    align-items: center;
  }

  .promptWrapper {
    width: 100%;
    display: flex;
    align-items: center;

    .promptForm {
      width: 100%;
      height: 100%;
      border-radius: 130px;
      background: $light-primary-color;
      display: flex;
      align-items: center;
      overflow: hidden;

      .promptInput {
        height: 100%;
        width: 100%;
        background: none;
        outline: none;
        border: none;
        font-size: 1rem;
        padding-left: 24px;
        color: $light-text-color;

        &::placeholder {
          color: $light-placeholder-color;
        }
      }

      .promptActions {
        display: flex;
        gap: 5px;
        margin-right: 7px;

        button {
          height: 45px;
          width: 45px;
          border: none;
          cursor: pointer;
          border-radius: 50%;
          font-size: 1.4rem;
          flex-shrink: 0;
          color: $light-text-color;
          background: $light-primary-color;
          transition: 0.3s ease;

          &:hover {
            background: $light-secondary-hover-color;
          }
        }

        .sendPromptBtn {
          color: $light-text-color;
          background: $light-secondary-color;
          display: none;

          &:hover {
            background: $light-placeholder-color;
          }
        }
      }

      // 인풋이 valid하면 send-prompt-btn 보이도록 (input과 promptActions는 인접 형제)
      .promptInput:valid + .promptActions {
        .sendPromptBtn {
          display: block;
        }
      }

      // 기본적으로 stop-response 버튼은 숨김
      .stopResponseBtn {
        display: none;
      }
    }

    // 테마 토글 및 채팅 삭제 버튼 스타일
    .recordBtn,
    .deleteChatsBtn {
      width: 56px;
      height: 100%;
      border: none;
      cursor: pointer;
      border-radius: 50%;
      font-size: 1.4rem;
      flex-shrink: 0;
      color: $light-text-color;
      background: $light-secondary-color;
      transition: 0.3s ease;

      &:hover {
        background: $light-placeholder-color;
      }
    }
  }
}

// 봇 응답 진행 중일 때 (body에 bot-responding 클래스 추가)
body.bot-responding {
  .promptForm {
    .promptInput {
      color: transparent;
    }

    #send-prompt-btn {
      display: none;
    }

    #stop-response-btn {
      display: block;
    }
  }
}

body.chatsActive .container :where(.appHeader, .suggestions) {
  display: none;
}


@keyframes rotate {
  100% {
    transform: rotate(360deg);
  }
}
